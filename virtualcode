import cv2
import numpy as np
import time
from keys import *
from handTracker import *
from pynput.keyboard import Controller

def getMousPos (event, x, y, flags, param):
    global clickedx, clickedy
    global mouseX, mousey
    if event == cv2.EVENT_LBUTTONUP:
        clickedx, clickedy = x, y
        print("clicked")
    if event==cv2.EVENT_MOUSEMOVE:
        mousex, mousey = x, y

def calculateIntDistance (p1, p2):
    return int(np.sqrt(np.square(p1[0]-p2[0])+np.square(p1[1]-p2[1])))

#Creating keys
w,h = 80,60
startX, startY = 40, 200
keys = []
letters = list("QWERTYUIOPASDFGHJKLZXCVBNM")
for i,l in enumerate(letters):
    if i<10:
        x = startX + i*(w+5)
        y = startY
    elif i<19:
        x = startX + (i-10)*w +i*5
        y = startY + h
    elif i<26:
        x = startX + (i-19)*w+i*5
        y = startY + 2*h
    keys.append(Key(x,y,w,h,l))
#adding space key, enter key and backspace key
keys.append(Key(startX+25, startY+2*h, 2*w+5, h, "SPACE"))
keys.append(Key(startX+8*w, startY+2*h+10, w, h, "clr"))
keys.append(Key(startX+w*5+30, startY+3*h+15, 5*w, h, "BACKSPACE"))

showKey = Key(300,5,80,50,"Show")
exitKey = Key(300,65,80,50,"Exit")
textBox = Key(startX, startY-h-5, 10*w+9*5, h, "")

cap = cv2.VideoCapture(0)
ptime = 0
tracker = HandTracker(detectionCon=0.5)


#getting frame;s height and width
frameHeight, frameWidth = cap.read()[1].shape[:2]
showKey.x = int(frameWidth*1.5)-85
exitKey.x = int(frameWidth*1.5)-85

clickedX , clickedY = 0,0
mousX, mousY = 0,0

show = True
cv2.namedWindow("video")
counter = 0
previousClick = 0

keyboard = Controller()

while True:
    if counter > 0:
        counter -= 1

    signTipX, signTipY = 0,0
    thumbTipX, thumbTipY = 0,0
    centerX, centerY = None, None

    ret,frame = cap.read()

    if not ret:
        break
    frame = cv2.resize(frame, (int(frameWidth*1.5), int(frameHeight*1.5)))
    frame = cv2.flip(frame, 1)

    frame = tracker.findHands(frame)
    lmList = tracker.getPostion(frame, draw=False)
    if lmList:
        signTipX, signTipY = lmList[8][1:]
        signTip2X, signTip2Y = lmList[9][1:]
        thumbTipX, thumbTipY = lmList[4][1:]
        if calculateIntDistance([signTipX, signTipY], [thumbTipX, thumbTipY]) < 50:
            centerX = int((signTipX+thumbTipX)/2)
            centerY = int((signTipY+thumbTipY)/2)
            cv2.line(frame, (signTipX, signTipY), (thumbTipX, thumbTipY), (255,0,0), 3)
            cv2.circle(frame, (centerX, centerY), 10, (255,0,0), cv2.FILLED)
    ctime = time.time()
    fps = int(1/(ctime-ptime))

    #show fps
    cv2.putText(frame, str(fps), (10,70), cv2.FONT_HERSHEY_PLAIN, 3, (255,0,0), 3)
    showKey.drawKey(frame,alpha=0,fontScale=.5)
    exitKey.drawKey(frame,alpha=0,fontScale=.5)
    cv2.setMouseCallback("video", getMousPos)

    if showKey.isOver(clickedX, clickedY):
        show = not show
        showKey.text = "Hide" if show else "Show"
        clickedX, clickedY = 0,0

    if exitKey.isOver(clickedX, clickedY):
        exit()

    alpha = 0.1
    if show:
        textBox.drawKey(frame, alpha=.3)
        for k in keys:
            if k.isOver(mousX, mousY) or k.isOver(signTipX, signTipY):
                alpha = 0.1
                if k.isOver(clickedX, clickedY):
                    if k.text == "BACKSPACE":
                        textBox.text = textBox.text[:-1]
                    elif k.text == "clr":
                        textBox.text = ""
                    elif len(textBox.text) < 30:
                        if k.text == "SPACE":
                            textBox.text += " "
                        else:
                            textBox.text += k.text  

            if centerX and k.isOver(centerX, centerY):
                clickTime = time.time()
                if clickTime - previousClick > 0.5:
                    if k.text == "BACKSPACE":
                        textBox.text = textBox.text[:-1]
                    elif k.text == "clr":
                        textBox.text = ""
                    elif len(textBox.text) < 30:
                        if k.text == "SPACE":
                            textBox.text += " "
                        else:
                            textBox.text += k.text
                            keyboard.press(k.text)
                    previousClick = clickTime
            k.drawKey(frame, alpha=alpha)
            alpha = 0.5
        clickedX, clickedY = 0,0
        centerX, centerY = None, None
    ptime = ctime
    cv2.imshow("video", frame)

    
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
